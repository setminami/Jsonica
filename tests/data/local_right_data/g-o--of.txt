[{"color": "fff000", "title": "Anchors", "items": [{"sign": "^", "desc-en": "Matches at the start of string or start of line if multi-line mode is enabled. Many regex implementations have multi-line mode enabled by default."}, {"sign": "$", "desc-en": "Matches at the end of string or end of line if multi-line mode is  enabled. Many regex implementations have multi-line mode enabled by default."}, {"sign": "\\A", "desc-en": "Matches at the start of the search string."}, {"sign": "\\Z", "desc-en": "Matches at the end of the search string, or before a newline at the end of the string."}, {"sign": "\\z", "desc-en": "Matches at the end of the search string."}, {"sign": "\\b", "desc-en": "Matches at word boundaries."}, {"sign": "\\B", "desc-en": "Matches anywhere but word boundaries."}]}, {"color": "f00000", "title": "Character Classes", "desc-en": "Character classes can be used in ranges.", "items": [{"sign": ".", "desc-en": "Matches any character except newline (matches newline in single-line)"}, {"sign": "\\s", "desc-en": "Matches white space characters."}, {"sign": "\\S", "desc-en": "Matches anything but white space characters."}, {"sign": "\\d", "desc-en": "Matches digits. Equivalent to [0-9]."}, {"sign": "\\D", "desc-en": "Matches anything but digits. Equivalent to [^0-9]."}, {"sign": "\\w", "desc-en": "Matches letters, digits and underscores. Equivalent to [A-Za-z0-9_]."}, {"sign": "\\W", "desc-en": "Matches anything but letters, digits and underscores."}, {"sign": "\\xff", "desc-en": "Matches ASCII hexadecimal character ff."}, {"sign": "\\x{ffff}", "desc-en": "Matches UTF-8 hexadecimal character ffff."}, {"sign": "\\A", "desc-en": "Matches ASCII control character ^A (case insensitive)."}, {"sign": "\\132", "desc-en": "Matches ASCII octal character 132."}]}, {"color": "0000FF", "title": "POSIX Character Classes", "desc-en": "POSIX Character Classes must be used in bracket expressions, e.g. [a-z[:upper:]].", "items": [{"sign": "[:upper:]", "desc-en": "Matches uppercase letters. Equivalent to A-Z."}, {"sign": "[:lower:]", "desc-en": "Matches lowercase letters. Equivalent to a-z."}, {"sign": "[:alpha:]", "desc-en": "Matches letters. Equivalent to A-Za-z."}, {"sign": "[:alnum:]", "desc-en": "Matches letters and digits. Equivalent to A-Za-z0-9."}, {"sign": "[:ascii:]", "desc-en": "Matches ASCII characters. Equivalent to \\\\x00-\\\\x7f."}, {"sign": "[:word:]", "desc-en": "Matches letters, digits and underscores. Equivalent to \\\\w."}, {"sign": "[:digit:]", "desc-en": "Matches digits. Equivalent to 0-9."}, {"sign": "[:xdigit:]", "desc-en": "Matches characters that can be used in hexadecimal codes."}, {"sign": "[:punct:]", "desc-en": "Matches punctuation."}, {"sign": "[:blank:]", "desc-en": "Matches space and tab. Equivalent to [ \\\\t]."}, {"sign": "[:space:]", "desc-en": "Matches space, tab and newline. Equivalent to \\\\s."}, {"sign": "[:cntrl:]", "desc-en": "Matches control characters. Equivalent to [\\\\x00-\\\\x1F\\\\x7F]."}, {"sign": "[:graph:]", "desc-en": "Matches printed characters. Equivalent to [\\\\x21-\\\\x7E]."}, {"sign": "[:print:]", "desc-en": "Matches printed characters and spaces. Equivalent to [\\\\x21-\\\\x7E]."}]}, {"color": "0f000f", "title": "Groups", "items": [{"sign": "(foo|bar)", "desc-en": "Matches pattern foo or bar."}, {"sign": "(foo)", "desc-en": "Define a group (or subpattern) consisting of pattern foo. Matches within the group can be referenced in a replacement using a backreference."}, {"sign": "(?<foo>bar)", "desc-en": "Define a named group named {foo} consisting of pattern bar. Matches within the group can be referenced in a replacement using the backreference foo."}, {"sign": "(?:foo)", "desc-en": "Define a passive group consisting of pattern foo. Passive groups cannot be referenced in a replacement using a backreference."}, {"sign": "(?>foo+)bar", "desc-en": "Define an atomic group consisting of pattern foo+. Once foo+ has been matched, the regex engine will not try to find other variable length matches of foo+ in order to find a match followed by a ma\u00dftch of bar. Atomic groups may be used for perforamce reasons."}]}, {"color": "000f0f", "title": "Bracket Expressions", "items": [{"sign": "[adf]", "desc-en": "Matches characters a or d or f."}, {"sign": "[^adf]", "desc-en": "Matches anything but characters a, d and f."}, {"sign": "[a-f]", "desc-en": "Match any lowercase letter between a and f inclusive."}, {"sign": "[A-F]", "desc-en": "Match any uppercase letter between A and F inclusive."}, {"sign": "[0-9]", "desc-en": "Match any digit between 0 and 9 inclusive."}]}, {"color": "0f0f0f", "title": "Quantifiers", "items": [{"sign": "*?", "desc-en": "Zero or more, lazy. Matches will be as small as possible."}, {"sign": "+", "desc-en": "One or more. Matches will be as large as possible."}, {"sign": "+?", "desc-en": "One or more, lazy. Matches will be as small as possible."}, {"sign": "?", "desc-en": "Zero or one. Matches will be as large as possible."}, {"sign": "??", "desc-en": "Zero or one, lazy. Matches will be as small as possible."}, {"sign": "{2}", "desc-en": "Two exactly."}, {"sign": "{2,}", "desc-en": "Two or more. Matches will be as large as possible."}, {"sign": "{2,}?", "desc-en": "Two or more, lazy. Matches will be as small as possible."}, {"sign": "{2,4}", "desc-en": "Two, three or four. Matches will be as large as possible."}, {"sign": "{2,4}?", "desc-en": "Two, three or four, lazy. Matches will be as small as possible."}]}, {"color": "0f00ff", "title": "Special Characters", "items": [{"sign": "\\", "desc-en": "Escape character."}, {"sign": "\\n", "desc-en": "Matches newline."}, {"sign": "\\t", "desc-en": "Matches tab."}, {"sign": "\\r", "desc-en": "Matches carriage return."}, {"sign": "\\v", "desc-en": "Matches form feed/page break."}]}, {"color": "00ff0f", "title": "Assertions", "items": [{"sign": "foo(?=bar)", "desc-en": "Lookahead assertion. The pattern foo will only match if followed by a match of pattern bar."}, {"sign": "foo(?!bar)", "desc-en": "Negative lookahead assertion. The pattern foo will only match if not followed by a match of pattern bar."}, {"sign": "(?<=foo)bar", "desc-en": "Lookbehind assertion. The pattern bar will only match if preceded by a match of pattern foo."}, {"sign": "(?<!foo)bar", "desc-en": "Negative lookbehind assertion. The pattern bar will only match if not preceded by a match of pattern foo."}]}, {"color": "000000", "title": "Back References", "desc-en": "Back references are used in replacements.", "items": [{"sign": "foo(?=bar)", "desc-en": "Lookahead assertion. The pattern foo will only match if followed by a match of pattern bar."}, {"sign": "foo(?!bar)", "desc-en": "Negative lookahead assertion. The pattern foo will only match if not followed by a match of pattern bar."}, {"sign": "(?<=foo)bar", "desc-en": "Lookbehind assertion. The pattern bar will only match if preceded by a match of pattern foo."}, {"sign": "(?<!foo)bar", "desc-en": "Negative lookbehind assertion. The pattern bar will only match if not preceded by a match of pattern foo."}]}, {"color": "000000", "title": "Case Modifiers", "desc-en": "Case modifiers are used in replacements.", "items": [{"sign": "\\\\\\u", "desc-en": "Make the next character in the replacement uppercase."}, {"sign": "\\\\\\l", "desc-en": "Make the next character in the replacement lowercase."}, {"sign": "\\\\\\U", "desc-en": "Make the remaining characters in the replacement uppercase."}, {"sign": "\\\\\\L", "desc-en": "Make the remaining characters in the replacement lowercase."}]}, {"color": "000000", "title": "Modifiers", "desc-en": "Modifiers can be grouped together, e.g. (?ixm).", "items": [{"sign": "(?i)", "desc-en": "Case insensitive mode. Make the remainder of the pattern or subpattern case insensitive."}, {"sign": "(?m)", "desc-en": "Multi-line mode. Make $ and ^ in the remainder of the pattern or subpattern match before/after newline."}, {"sign": "(?s)", "desc-en": "Single-line mode. Make the . (dot) in the remainder of the pattern or subpattern match newline."}, {"sign": "(?x)", "desc-en": "Free spacing mode. Ignore white space in the remainder of the pattern or subpattern."}]}]
