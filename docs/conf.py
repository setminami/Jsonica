#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# jsonica documentation build configuration file, created by
# sphinx-quickstart on Sun Jan 14 10:36:50 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx.ext.viewcode']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.rst']

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'jsonica'
author = 'setminami'
copyright = '2018, %s'%author

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '0.0.9'
# The full version, including alpha/beta/rc tags.
release = '0.1.0'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
html_sidebars = {
    '**': [
        'relations.html',  # needs 'show_related': True theme option to display
        'searchbox.html',
    ]
}

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'jsonicadoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'jsonica.tex', 'jsonica Documentation',
     'Author', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'jsonica', 'jsonica Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'jsonica', 'jsonica Documentation',
     author, 'jsonica', 'One line description of project.',
     'Miscellaneous'),
]



# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

import sys, subprocess
from os.path import join, isdir, dirname, abspath
from shutil import move, rmtree

ROOT = abspath(dirname(dirname(__file__)))
SRC_HOME = join(ROOT, project)
cur_dir = abspath(dirname(__file__))

# statics
i_gens = '.'
tmpfile = (join(cur_dir, '.tmp.rst'), join(cur_dir, 'index.rst'))

# workaround index see.
# https://github.com/rtfd/readthedocs.org/issues/1139
def __pre_doc():
  # OPTIMIZE: 必要であればyield
  sys.path.insert(0, SRC_HOME)
  # apidoc生成に必要なファイル、index.rstを残すとgithubpagesに影響を与える？
  move(tmpfile[0], tmpfile[1])

def __post_doc(app, exception):
  print('^'*50)
  # NOTE: 例外時は環境を元に戻す
  try:
    html_dir = join(join(cur_dir, '_build'), 'html')
    if isdir(html_dir): # for githubpages
      sphinx_site = 'apidoc'
      if isdir(sphinx_site):
        rmtree(sphinx_site)
      rmtree(i_gens)
      # TODO: ここへのリンクをREADME.md, README_ja.mdに記述
      move(html_dir, sphinx_site)
  finally:
    # NOTE: readthedocsでは、buildが何度も回るため元の状態に戻す
    move(tmpfile[1], tmpfile[0])
  print('^'*50)

def run_apidoc(_):
  print('X'*60)
  src_base = SRC_HOME
  sys.path.insert(0, SRC_HOME)
  for module in ['sub_command_core', '.']:
    output_path = join(cur_dir, i_gens)
    input_path = join(src_base, module)
    cmd_path = 'sphinx-apidoc'
    if hasattr(sys, 'real_prefix'):  # Check to see if we are in a virtualenv
      # If we are, assemble the path manually
      cmd_path = abspath(join(sys.prefix, 'bin', cmd_path))
    cmd = [cmd_path, '-efP', '-d', '0', '-o', output_path, input_path]
    subprocess.check_call(cmd)
  print('X'*60)

# http://www.sphinx-doc.org/en/stable/extdev/appapi.html#sphinx-core-events
def setup(app):
  print('*'*60)
  app.connect('builder-inited', run_apidoc)
  # app.connect('build-finished', __post_doc)
  print('*'*60)
